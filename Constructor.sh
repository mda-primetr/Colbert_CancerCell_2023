#!/usr/bin/bash

# SampleListTrimmed is <SampleName>\t<Read1Path>\t<Read2Path>\t<DecompressorForReadFiles>

cat SampleListTrimmed | parallel -I {} 'threads=28; name=`echo {} | cut -f1`; link1=`echo {} | cut -f2`; link2=`echo {} | cut -f3`; link3=`echo {} | cut -f2 | sed "s/.1.fq.bz2/.unpaired.fq.bz2/g"`; decomp=`echo {} | cut -f4`; size=`echo $link1 $link2 | xargs du -bsc | tail -1 | cut -f1`; root="Analysis/CellCancer"; prefix="$root/BacteriaAnalysis/$name"; pathdir="$prefix"; dirname="$prefix"; echo "echo $size\tmkdir -p $prefix; paste <($decomp $link1 | paste - - - -) <($decomp $link2 | paste - - - -) | tr \"\\\t\" \"\\\n\" | bbmerge.sh -Xmx20g in=stdin.fq int=t out=stdout.fq mix=t usejni=t maxstrict=t 2>$pathdir/merge.err | tr \" \" \".\" > $pathdir/Merged.fq; $decomp $link3 >> $pathdir/Merged.fq; cat $pathdir/Merged.fq | vsearch --fastx_uniques - --fastaout $pathdir/derep.fa --fasta_width 0 --minseqlength 32 --sizeout 2>$pathdir/derep.err; cat $pathdir/Merged.fq | lbzip2 -c -n$threads > $pathdir/Merged.fq.bz2; rm $pathdir/Merged.fq; normalize-by-median.py -k 32 -M 32G -C 1 -o $pathdir/normalized.fa $pathdir/derep.fa 2>$pathdir/normalize.err; multiBlast.pl --in $pathdir/normalized.fa --threads $threads --db BacMapMain --params bacmap --out $pathdir/blastn.out 2>$pathdir/blastn.err; diamond blastx -q $pathdir/normalized.fa --db bacteria.dmnd -o $pathdir/blastx.sam --id 90 --top 5 -f 101 --shapes 1 --unal 0 --masking 0 --query-cover 80 -c 1 -l 16 --evalue .1 -b 2.6 --algo 0 -p $threads 2>$pathdir/blastx.err; cat $pathdir/blastx.sam | lbzip2 -c -n$threads > $pathdir/blastx.sam.bz2; rm $pathdir/blastx.sam; cat $pathdir/blastn.out | lbzip2 -c -n$threads > $pathdir/blastn.out.bz2; rm $pathdir/blastn.out; lbzcat $pathdir/blastn.out.bz2 $pathdir/blastx.sam.bz2 | grep -v \"^@\" | cut -f1 | sort --buffer-size=20G --parallel=$threads --compress-program=lz4 | uniq | getSeq $pathdir/normalized.fa > $pathdir/mapped.fa; multiBlast.pl --in $pathdir/mapped.fa --db privrt --params bacmapPri --threads $threads --out $pathdir/blastn.privrt.out 2>$pathdir/blastn.privrt.err; cat $pathdir/blastn.privrt.out | lbzip2 -n$threads -c > $pathdir/blastn.privrt.out.bz2; rm $pathdir/blastn.privrt.out; perl filterBlastnResults.pl $dirname/blastn.out.bz2 $dirname/blastn.privrt.out.bz2 | lbzip2 -c > $dirname/blastn.filtered.out.bz2; vsearch --usearch_global $dirname/mapped.fa --db 16SOverall.14.vdb --wordlength 14 --id .90  --maxaccepts 32 --maxrejects 128  --blast6out $dirname/blastn.16S.out --threads $threads 1>$dirname/blastn.16S.stdout 2>$dirname/blastn.16S.stderr; cat $dirname/blastn.16S.out | lbzip2 -n8 -c > $dirname/blastn.16S.out.bz2; rm $dirname/blastn.16S.out; filterBlastnResults.pl $dirname/blastn.filtered.out.bz2 $dirname/blastn.16S.out.bz2 force | lbzip2 -c > $dirname/blastn.filtered.16S.out.bz2; perl convertBTOPtoSam.pl $dirname/blastn.filtered.16S.out.bz2 $dirname/normalized.fa $threads | lbzip2 -c > $dirname/blastn.sam.bz2; clusterReferences.pl $dirname/blastx.sam.bz2 $dirname/blastn.sam.bz2 1>$dirname/clusters.txt 2>$dirname/clusters.err; cat $dirname/normalized.fa | lbzip2 -c > $dirname/normalized.fa.bz2; buildPseudoScaffolds.pl $dirname/clusters.txt $dirname/normalized.fa.bz2 $dirname/blastx.sam.bz2 $dirname/blastn.sam.bz2 1>$dirname/build.fa 2>$dirname/build.err; superScaffold.pl $dirname/clusters.txt $dirname/build.fa > $dirname/super.fa 2>$dirname/super.err; bbmap.sh -Xmx20g in=$dirname/derep.fa ref=$dirname/super.fa nodisk=t usejni=t fast=t minid=.95 bloomserial=f idfilter=.92 bloom=t bloomserial=f k=15 ambiguous=random deterministic=t sam=1.3 32bit=t noheader=t outm=stdout.sam threads=$threads 2>$dirname/rebuild.map.err | zstd -cq > $dirname/rebuild.sam.zstd; adjustSizesAndFilter.pl build 0 $dirname/rebuild.sam.zstd $dirname/super.fa /dev/null $threads >$dirname/rebuild.fa 2>$dirname/rebuild.err; bbmap.sh -Xmx20g in=$dirname/derep.fa ref=$dirname/rebuild.fa nodisk=t usejni=t fast=t minid=.95 bloomserial=f idfilter=.92 bloom=t bloomserial=f k=15 ambiguous=random deterministic=t sam=1.3 32bit=t noheader=t outm=stdout.sam threads=$threads 2>$dirname/quant.map.err | zstd -cq > $dirname/quant.sam.zstd; adjustSizesAndFilter.pl quant 0 $dirname/quant.sam.zstd $dirname/rebuild.fa /dev/null $threads >$dirname/quant.fa 2>$dirname/quant.err"' | sort -nr | cut -f2- > CommandsBac
